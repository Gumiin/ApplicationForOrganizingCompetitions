[
  {
    "ContainingType": "Server.Controllers.AuthenticationController",
    "Method": "DeleteUser",
    "RelativePath": "api/Authentication/delete-user/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.AuthenticationController",
    "Method": "SignInAsync",
    "RelativePath": "api/Authentication/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "BaseLibrary.DTOs.Login",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.AuthenticationController",
    "Method": "RefreshTokenAsync",
    "RelativePath": "api/Authentication/refresh-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "BaseLibrary.DTOs.RefreshToken",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.AuthenticationController",
    "Method": "CreateAsync",
    "RelativePath": "api/Authentication/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "BaseLibrary.DTOs.Register",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.AuthenticationController",
    "Method": "GetRoles",
    "RelativePath": "api/Authentication/roles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.AuthenticationController",
    "Method": "UpdateProfile",
    "RelativePath": "api/Authentication/update-profile",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "profile",
        "Type": "BaseLibrary.DTOs.UserProfile",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.AuthenticationController",
    "Method": "UpdateUser",
    "RelativePath": "api/Authentication/update-user",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "manageUser",
        "Type": "BaseLibrary.DTOs.ManageUser",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.AuthenticationController",
    "Method": "GetUsersAsync",
    "RelativePath": "api/Authentication/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.CompetitionController",
    "Method": "AddParticipant",
    "RelativePath": "api/Competition/add-participant",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "competitionId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "participant",
        "Type": "BaseLibrary.Entities.Participant",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.CompetitionController",
    "Method": "AddPoints",
    "RelativePath": "api/Competition/add-points",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roundId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "points",
        "Type": "BaseLibrary.Entities.Points",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.CompetitionController",
    "Method": "AddRound",
    "RelativePath": "api/Competition/add-round",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "competitionId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "round",
        "Type": "BaseLibrary.Entities.Round",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.CompetitionController",
    "Method": "AddStatus",
    "RelativePath": "api/Competition/add-status",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "BaseLibrary.Entities.Status",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.CompetitionController",
    "Method": "CreateCompetition",
    "RelativePath": "api/Competition/create-competition",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "competition",
        "Type": "BaseLibrary.Entities.Competition",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.CompetitionController",
    "Method": "DeleteCompetition",
    "RelativePath": "api/Competition/delete-competition/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.CompetitionController",
    "Method": "GetCompetition",
    "RelativePath": "api/Competition/get-competition",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.CompetitionController",
    "Method": "GetCompetitions",
    "RelativePath": "api/Competition/get-competitions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.CompetitionController",
    "Method": "UpdateCompetition",
    "RelativePath": "api/Competition/update-competition",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "competition",
        "Type": "BaseLibrary.Entities.Competition",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.CompetitionController",
    "Method": "UpdateCompetitionStatus",
    "RelativePath": "api/Competition/update-competition-status/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "statusId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.CompetitionController",
    "Method": "UpdateSumPointsAndPlace",
    "RelativePath": "api/Competition/update-sum-points-and-place",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "sumPoints",
        "Type": "System.Double",
        "IsRequired": false
      },
      {
        "Name": "place",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  }
]